name: "Test"
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
      if: ${{ success() }}
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    - name: Setup dependencies using pip
      run: pip install -r requirements.txt
      if: ${{ success() }}
    - name: Setup config (using SAMPLE-config.py as config.py)
      run: python .github/workflows/verify_result.py -c
      if: ${{ success() }}
    - name: Download IP2LOCATION DB (Using repository secret)
      shell: bash
      env:
        IP2LOCATION_DOWNLOAD_URL: ${{ secrets.IP2LOCATION_DOWNLOAD_URL }}
      run: wget -q -O - $IP2LOCATION_DOWNLOAD_URL | tar -xvzf - -C data
      if: ${{ success() }}
    - name: Setup Node.js (v1 version 14.x)
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
      if: ${{ success() }}
    - name: Setup Google Chrome browser (ONLY used for Sitespeed)
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        sudo apt-get update
        sudo apt-get --only-upgrade install google-chrome-stable
        google-chrome --version
    - name: Setup GeckoDriver (Used for Selenium)
      run: wget -q -O - https://github.com/mozilla/geckodriver/releases/download/v0.30.0/geckodriver-v0.30.0-linux64.tar.gz | tar -xvzf -
      if: ${{ success() }}
    - name: Setup BrowserMob Proxy (Used for Selenium)
      run: |
        wget -q -O browsermob-proxy-2.1.4-bin.zip https://github.com/lightbody/browsermob-proxy/releases/download/browsermob-proxy-2.1.4/browsermob-proxy-2.1.4-bin.zip
        sudo apt-get install unzip
        unzip browsermob-proxy-2.1.4-bin.zip
      if: ${{ success() }}
    # - name: Setup HarExporter Plugin (Used for Selenium)
    #   run: |
    #   run: wget -q -O - https://addons.mozilla.org/firefox/downloads/file/964750/har_export_trigger-0.6.1-an+fx.xpi
    #   if: ${{ success() }}
    - name: Setup Sitespeed.io npm package (ONLY used for Sitespeed)
      run: npm install -g sitespeed.io
      if: ${{ success() }}
    # - name: Test Performance (Sitespeed.io)
    #   run: sitespeed.io --rm --shm-size=1g -b chrome --plugins.remove screenshot --browsertime.chrome.includeResponseBodies --summary-detail true --outputFolder results --firstParty --utc --xvfb --browsertime.videoParams.createFilmstrip false --browsertime.chrome.args ignore-certificate-errors -n 2 https://webperf.se/
    #   if: ${{ always() }}
    - name: SiteSpeed Test - https://webperf.se/
      run: |
        sitespeed.io -b chrome --plugins.remove screenshot --browsertime.chrome.collectPerfLog --browsertime.chrome.includeResponseBodies "all" --html.fetchHARFiles true --summary-detail true --logToFile true --outputFolder results --firstParty --utc true --xvfb --browsertime.videoParams.createFilmstrip false --browsertime.chrome.args ignore-certificate-errors --html.logDownloadLink true -n 1 https://webperf.se/
        echo "# results folder"
        ls results/
        echo "# data folder"
        ls results/pages/webperf_se/data/
        gzip -d results/pages/webperf_se/data/chromePerflog-1.json.gz
        echo "# data folder"
        ls results/pages/webperf_se/data/
        cat results/pages/webperf_se/data/chromePerflog-1.json
      if: ${{ success() }}
    # cat results/pages/webperf_se/data/browsertime.har
    - name: Test Tracking and Privacy - https://webperf.se/
      run: |
        python default.py -t 23 -r -u https://webperf.se/ -o .github/workflows/testresult-23.json
        python .github/workflows/verify_result.py -t 23
      if: ${{ success() }}
    # - name: Content - https://webperf.se/
    #   run: cat results/pages/webperf_se/data/browsertime.har
    #   if: ${{ success() }}
    # - name: Test Tracking and Privacy - https://polisen.se/aktuellt/polisens-nyheter/
    #   run: |
    #     python default.py -t 23 -r -u https://polisen.se/aktuellt/polisens-nyheter/ -o .github/workflows/testresult-23.json
    #     python .github/workflows/verify_result.py -t 23
    #   if: ${{ success() }}
    # - name: Test Tracking and Privacy - https://st.nu/
    #   run: |
    #     python default.py -t 23 -r -u https://st.nu/ -o .github/workflows/testresult-23.json
    #     python .github/workflows/verify_result.py -t 23
    #   if: ${{ success() }}
    # - name: Content - https://webperf.se/
    #   run: cat results/pages/st_nu/data/browsertime.har
    #   if: ${{ success() }}
    - name: Test Tracking and Privacy - https://skatteverket.se/
      run: |
        python default.py -t 23 -r -u https://skatteverket.se/ -o .github/workflows/testresult-23.json
        python .github/workflows/verify_result.py -t 23
      if: ${{ success() }}
    - name: Content - https://skatteverket.se/
      run: cat results/pages/skatteverket_se/data/browsertime.har
      if: ${{ success() }}
    # - name: Trace-1 - https://webperf.se/
    #   run: |
    #     gzip -d /home/runner/work/webperf_core/webperf_core/results/pages/webperf_se/data/trace-1.json.gz
    #     cat /home/runner/work/webperf_core/webperf_core/results/pages/webperf_se/data/trace-1.json
    #   if: ${{ always() }}
    # - name: Test Tracking and Privacy - https://polisen.se/aktuellt/polisens-nyheter/?lpfm.loc=Stockholms l√§n
    #   run: |
    #     python default.py -t 23 -r -u https://polisen.se/aktuellt/polisens-nyheter/?lpfm.loc=Stockholms%20l%C3%A4n -o .github/workflows/testresult-23.json
    #     python .github/workflows/verify_result.py -t 23
    #   if: ${{ success() }}
    # - name: DEBUG
    #   run: ls /home/runner/work/webperf_core/webperf_core/results/pages/polisen_se/aktuellt/polisens-nyheter/
    #   if: ${{ always() }}
    # - name: Trace-1 - https://polisen.se/aktuellt/polisens-nyheter/
    #   run: |
    #     gzip -d /home/runner/work/webperf_core/webperf_core/results/pages/polisen_se/aktuellt/polisens-nyheter/data/trace-1.json.gz
    #     cat /home/runner/work/webperf_core/webperf_core/results/pages/polisen_se/aktuellt/polisens-nyheter/data/trace-1.json
    #   if: ${{ always() }}
    # - name: Trace-1 - https://st.nu/
    #   run: |
    #     gzip -d /home/runner/work/webperf_core/webperf_core/results/pages/st_nu/data/trace-1.json.gz
    #     cat /home/runner/work/webperf_core/webperf_core/results/pages/st_nu/data/trace-1.json
    #   if: ${{ always() }}
    # - name: Setup PageXray npm package (ONLY used for Sitespeed)
    #   run: npm install pagexray -g
    #   if: ${{ always() }}
    # - name: PageXray pretty - https://webperf.se/
    #   run: pagexray --pretty results/pages/webperf_se/data/browsertime.har
    #   if: ${{ always() }}
    # - name: PageXray pretty - https://polisen.se/aktuellt/polisens-nyheter/
    #   run: pagexray --pretty pages/polisen_se/aktuellt/polisens-nyheter/data/browsertime.har
    #   if: ${{ always() }}
    # - name: PageXray pretty - https://st.nu/
    #   run: pagexray --pretty results/pages/st_nu/data/browsertime.har
    #   if: ${{ always() }}
